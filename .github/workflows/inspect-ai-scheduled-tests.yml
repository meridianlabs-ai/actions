---
name: Inspect AI Scheduled Tests

"on":
  schedule:
    # Run every 12 hours
    - cron: "0 */12 * * *"
  push:
    branches:
      - "**" # Run on all branches for testing
    # This is valuable during action development cycle
  workflow_dispatch:
    inputs:
      run_slow_tests:
        description: "Run slow tests"
        required: false
        default: true
        type: boolean
      test_slack_access:
        description: "Test Slack channel access"
        required: false
        default: false
        type: boolean

jobs:
  slow-tests:
    if: ${{ github.event_name == 'schedule' || github.event_name == 'push' || inputs.run_slow_tests }}
    runs-on: ubuntu-latest

    steps:
      # Critical: Setup modern Docker build system
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          driver-opts: |
            network=host
          buildkitd-flags: |
            --allow-insecure-entitlement security.insecure
            --allow-insecure-entitlement network.host

      - name: Checkout inspect_ai repository
        uses: actions/checkout@v4
        with:
          repository: UKGovernmentBEIS/inspect_ai

      - name: Get inspect_ai commit info
        id: inspect_commit
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/setup.py', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache built wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip/wheels
          key: ${{ runner.os }}-wheels-${{ hashFiles('**/pyproject.toml', '**/setup.py', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-wheels-

      - name: Install dependencies
        # -e is required so that the tests can find dependent media files
        # that are not part of the package.
        run: |
          python -m pip install --upgrade pip
          # Install inspect_ai with development dependencies for testing
          pip install --only-binary=all -e ".[dev]"

      - name: Run slow tests
        timeout-minutes: 180
        env:
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
          BUILDX_CACHE_FROM: type=local,src=/tmp/.buildx-cache
          BUILDX_CACHE_TO: type=local,dest=/tmp/.buildx-cache,mode=max
          # ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          # GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          # GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
          # OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

        run: |
          echo "Running slow tests with --runslow flag..."
          pytest --runslow --runapi -m api --ignore=tests/agent/test_agent_human.py

      - name: Report test results to Slack
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text": "${{ job.status == 'success' && 'âœ… Slow Tests Passed' || 'ðŸš¨ Slow Tests Failed' }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "${{ job.status == 'success' && 'âœ… Slow Tests Passed' || 'ðŸš¨ Slow Tests Failed' }}"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn", 
                      "text": "*Branch:*\n${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Trigger:*\n${{ github.event_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow:*\n<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ job.status == 'failure' && '<!channel> The slow tests have failed. Please investigate.' || 'All tests completed successfully! ðŸŽ‰' }}"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Actor: ${{ github.actor }} | Tested: <https://github.com/UKGovernmentBEIS/inspect_ai/commit/${{ steps.inspect_commit.outputs.sha }}|inspect_ai@${{ steps.inspect_commit.outputs.short_sha }}>"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Cleanup Docker resources
        if: always()
        run: |
          docker system prune -f
          docker volume prune -f

  test-slack-access:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.test_slack_access }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Test Slack Channel Access
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: |
            ðŸ§ª **Slack Integration Test**
            
            This is a test message to verify GitHub Actions can successfully post to this Slack channel.
            
            â€¢ Repository: ${{ github.repository }}
            â€¢ Branch: ${{ github.ref_name }}  
            â€¢ Actor: ${{ github.actor }}
            â€¢ Run ID: ${{ github.run_id }}
            
            If you see this message, the integration is working correctly! âœ…
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          
      - name: Test Result
        run: |
          echo "âœ… Slack channel access test completed successfully!"
          echo "Check your Slack channel for the test message."
